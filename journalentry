import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';
import { Calendar, BookOpen, BarChart2, Settings } from 'lucide-react';

const JournalInterface = () => {
  const [entry, setEntry] = useState('');
  const [mood, setMood] = useState(5);
  const [moodHistory, setMoodHistory] = useState([]);
  const [prompt, setPrompt] = useState('');

  const journalPrompts = [
    "What made you happy today?",
    "What challenges did you face?",
    "What are you grateful for?",
    "How did you take care of yourself today?",
    "What's something you learned today?"
  ];

  useEffect(() => {
    // Get random prompt
    const randomPrompt = journalPrompts[Math.floor(Math.random() * journalPrompts.length)];
    setPrompt(randomPrompt);

    // Mock mood history data
    const mockData = Array.from({ length: 7 }, (_, i) => ({
      date: new Date(Date.now() - (6 - i) * 24 * 60 * 60 * 1000).toLocaleDateString(),
      mood: Math.floor(Math.random() * 5) + 3
    }));
    setMoodHistory(mockData);
  }, []);

  const handleSubmit = async () => {
    // Mock API call
    console.log('Submitting entry:', { entry, mood });
    setEntry('');
    setMood(5);
  };

  return (
    <div className="max-w-4xl mx-auto p-4 space-y-4">
      {/* Navigation */}
      <nav className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-bold">Lemood</h1>
        <div className="flex space-x-4">
          <Button variant="ghost" size="icon">
            <Calendar className="h-5 w-5" />
          </Button>
          <Button variant="ghost" size="icon">
            <BookOpen className="h-5 w-5" />
          </Button>
          <Button variant="ghost" size="icon">
            <BarChart2 className="h-5 w-5" />
          </Button>
          <Button variant="ghost" size="icon">
            <Settings className="h-5 w-5" />
          </Button>
        </div>
      </nav>

      {/* Journal Entry Section */}
      <Card>
        <CardHeader>
          <CardTitle>Today's Journal</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            <p className="text-gray-600">{prompt}</p>
            <Textarea
              value={entry}
              onChange={(e) => setEntry(e.target.value)}
              placeholder="Write your thoughts here..."
              className="min-h-32"
            />
            <div className="flex items-center space-x-4">
              <span>Mood:</span>
              <input
                type="range"
                min="1"
                max="10"
                value={mood}
                onChange={(e) => setMood(parseInt(e.target.value))}
                className="w-48"
              />
              <span>{mood}/10</span>
            </div>
            <Button onClick={handleSubmit} className="w-full">
              Save Entry
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Mood Tracking Chart */}
      <Card>
        <CardHeader>
          <CardTitle>Mood Trends</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <LineChart data={moodHistory}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="date" />
                <YAxis domain={[0, 10]} />
                <Tooltip />
                <Line type="monotone" dataKey="mood" stroke="#8884d8" />
              </LineChart>
            </ResponsiveContainer>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default JournalInterface;
